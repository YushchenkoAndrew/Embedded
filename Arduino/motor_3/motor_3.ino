byte i=0;
boolean q=true;
byte n;
int j=0;
byte w;
byte m;
byte p;
byte newmass=1;
byte k=1;
byte l=1;

byte times=10;

int pause[6]={0,//3
              530,//4
               540,//2
               530,//1
               400,//6
               580,//5
               
               };
byte string_m[6]={
                  2,
                  3,
                  1,
                  0,
                  5,
                  4,
                  };

byte a[6][128];

byte b[128]={
  0x00, 0x00, 0x00, 0x01, 0x3F, 0x3F, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  };

byte b1[128]={
  0x00, 0x00, 0x00, 0x01, 0x3F, 0x3F, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x32, 0x31, 0x29, 0x29, 0x25, 0x25, 0x22,
  0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  };

byte b2[128]={
  0x00, 0x00, 0x00, 0x01, 0x3F, 0x3F, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x32, 0x31, 0x29, 0x29, 0x25, 0x25, 0x22,
  0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x25, 0x25, 0x25, 0x25,
  0x25, 0x25, 0x25, 0x3F, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  };

byte b3[128]={
  0x00, 0x00, 0x00, 0x01, 0x3F, 0x3F, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x32, 0x31, 0x29, 0x29, 0x25, 0x25, 0x22,
  0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x25, 0x25, 0x25, 0x25,
  0x25, 0x25, 0x25, 0x3F, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x09, 0x3F,
  0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  };

byte b4[128]={
  0x00, 0x00, 0x00, 0x01, 0x3F, 0x3F, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x32, 0x31, 0x29, 0x29, 0x25, 0x25, 0x22,
  0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x25, 0x25, 0x25, 0x25,
  0x25, 0x25, 0x25, 0x3F, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x09, 0x3F,
  0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x27, 0x27, 0x25, 0x25,
  0x25, 0x25, 0x25, 0x3D, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  };

byte b5[128]={
  0x00, 0x00, 0x00, 0x01, 0x3F, 0x3F, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x32, 0x31, 0x29, 0x29, 0x25, 0x25, 0x22,
  0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x25, 0x25, 0x25, 0x25,
  0x25, 0x25, 0x25, 0x3F, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x09, 0x3F,
  0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x27, 0x27, 0x25, 0x25,
  0x25, 0x25, 0x25, 0x3D, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F,
  0x3F, 0x25, 0x25, 0x25, 0x25, 0x25, 0x3D, 0x3D,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  };
  
byte c[8];

void reading()
{
 if ((digitalRead(3) == LOW)&&(q == true))
  { 
    i++;
  if (digitalRead(3) == LOW)
  {
  q=false;
  }
  
  }
  else 
  
    if ((digitalRead(3) == HIGH))
    {
  q=true;
    }
}


void change()
{
 
 
for (j=0; j<=128; j++)
{
  m=0;

switch(k)
{
  case 1:p=b[j];break;
  case 2:p=b1[j];break;
  case 3:p=b2[j];break;
  case 4:p=b3[j];break;
  case 5:p=b4[j];break;
  case 6:p=b5[j];break;
}

  if (p != 0)
  {
    for (w=0; w<=7; w++)
  {
    
  c[w]=0;
  }
 
  while (p != 1)
  {
    c[m]=p%2;
    digitalWrite(7,0);
    p=p/2;
    m++;
  }
  c[m]=p;
  }
  else
  for (w=0; w<=7; w++)
  {
    
  c[w]=0;
  }
  
  for (w=0; w<=5; w++)
  {
    a[w][j]=c[w];
    
  }
  

}
  
}




void setup()
{
  pinMode(2,INPUT);
  pinMode(3,INPUT);
  pinMode(7,OUTPUT);
 for (j=0; j<=128; j++)
      change();
  while (digitalRead(2) != 0);
//Serial.begin(250000);
  
}
void loop()
{
if (newmass % times == 0)
  {

  change();
  newmass=1;
k=k+l;
  }
  if (k == 7 ){ l=l*(-1); k=6;}
  if (k == 0 ) { k=1;  l=l*(-1);}
newmass++;
 while (digitalRead(2) != 0)
 digitalWrite(7,0);



  i=0;
  while (i != 35)
  {    
    reading();
   n=i/6;
   digitalWrite(7,0);
   
 //    digitalWrite(7,0);

    if (i % 6 == 0)
    {

    
 delayMicroseconds(pause[n]); 

      for (j=128; j>=0; j--)
      {
          

        digitalWrite(7,a[string_m[n]][j]);
        reading();
        
       
          if (i == 35) break;
    
    }
    }
    
   
  
  }
   
  
}

